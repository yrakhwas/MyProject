// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyProject.Data;

#nullable disable

namespace MyProject.Migrations
{
    [DbContext(typeof(FoodShopDbContext))]
    [Migration("20230927064611_ChangingTypeOfPriceColumn")]
    partial class ChangingTypeOfPriceColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EstablishmentPizza", b =>
                {
                    b.Property<int>("establishmentsId")
                        .HasColumnType("int");

                    b.Property<int>("pizzasId")
                        .HasColumnType("int");

                    b.HasKey("establishmentsId", "pizzasId");

                    b.HasIndex("pizzasId");

                    b.ToTable("EstablishmentPizza");
                });

            modelBuilder.Entity("EstablishmentSalad", b =>
                {
                    b.Property<int>("establishmentsId")
                        .HasColumnType("int");

                    b.Property<int>("saladsId")
                        .HasColumnType("int");

                    b.HasKey("establishmentsId", "saladsId");

                    b.HasIndex("saladsId");

                    b.ToTable("EstablishmentSalad");
                });

            modelBuilder.Entity("EstablishmentSushi", b =>
                {
                    b.Property<int>("establishmentsId")
                        .HasColumnType("int");

                    b.Property<int>("sushisId")
                        .HasColumnType("int");

                    b.HasKey("establishmentsId", "sushisId");

                    b.HasIndex("sushisId");

                    b.ToTable("EstablishmentSushi");
                });

            modelBuilder.Entity("IngridientPizza", b =>
                {
                    b.Property<int>("ingridientsId")
                        .HasColumnType("int");

                    b.Property<int>("pizzasId")
                        .HasColumnType("int");

                    b.HasKey("ingridientsId", "pizzasId");

                    b.HasIndex("pizzasId");

                    b.ToTable("IngridientPizza");
                });

            modelBuilder.Entity("IngridientSalad", b =>
                {
                    b.Property<int>("ingridientsId")
                        .HasColumnType("int");

                    b.Property<int>("saladsId")
                        .HasColumnType("int");

                    b.HasKey("ingridientsId", "saladsId");

                    b.HasIndex("saladsId");

                    b.ToTable("IngridientSalad");
                });

            modelBuilder.Entity("IngridientSushi", b =>
                {
                    b.Property<int>("ingridientsId")
                        .HasColumnType("int");

                    b.Property<int>("sushisId")
                        .HasColumnType("int");

                    b.HasKey("ingridientsId", "sushisId");

                    b.HasIndex("sushisId");

                    b.ToTable("IngridientSushi");
                });

            modelBuilder.Entity("MyProject.Data.Entities.Establishment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("establishments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adress = "Soborna_1 st",
                            Name = "Number_1"
                        },
                        new
                        {
                            Id = 2,
                            Adress = "Soborna_2 st",
                            Name = "Number_2"
                        },
                        new
                        {
                            Id = 3,
                            Adress = "Soborna_3 st",
                            Name = "Number_3"
                        });
                });

            modelBuilder.Entity("MyProject.Data.Entities.Ingridient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ingridients");

                    b.HasData(
                        new
                        {
                            Id = 22,
                            Name = "Ingrid_1",
                            Price = 1m
                        },
                        new
                        {
                            Id = 23,
                            Name = "Ingrid_2",
                            Price = 2m
                        },
                        new
                        {
                            Id = 24,
                            Name = "Ingrid_3",
                            Price = 3m
                        },
                        new
                        {
                            Id = 25,
                            Name = "Ingrid_4",
                            Price = 4m
                        },
                        new
                        {
                            Id = 26,
                            Name = "Ingrid_5",
                            Price = 5m
                        },
                        new
                        {
                            Id = 27,
                            Name = "Ingrid_6",
                            Price = 6m
                        });
                });

            modelBuilder.Entity("MyProject.Data.Entities.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("pizza");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Neapolitana",
                            Price = 6m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Neapolitana-2",
                            Price = 7m
                        });
                });

            modelBuilder.Entity("MyProject.Data.Entities.PizzaIngridient", b =>
                {
                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.Property<int>("IngridientId")
                        .HasColumnType("int");

                    b.HasKey("PizzaId", "IngridientId");

                    b.HasIndex("IngridientId");

                    b.ToTable("pizzaIngridients");

                    b.HasData(
                        new
                        {
                            PizzaId = 1,
                            IngridientId = 1
                        },
                        new
                        {
                            PizzaId = 1,
                            IngridientId = 2
                        },
                        new
                        {
                            PizzaId = 1,
                            IngridientId = 3
                        },
                        new
                        {
                            PizzaId = 2,
                            IngridientId = 4
                        },
                        new
                        {
                            PizzaId = 2,
                            IngridientId = 5
                        },
                        new
                        {
                            PizzaId = 2,
                            IngridientId = 6
                        });
                });

            modelBuilder.Entity("MyProject.Data.Entities.Salad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("salads");

                    b.HasData(
                        new
                        {
                            Id = 1001,
                            Name = "Cesair",
                            Price = 12m
                        },
                        new
                        {
                            Id = 1002,
                            Name = "King",
                            Price = 6m
                        });
                });

            modelBuilder.Entity("MyProject.Data.Entities.SaladIngridient", b =>
                {
                    b.Property<int>("SaladId")
                        .HasColumnType("int");

                    b.Property<int>("IngridientId")
                        .HasColumnType("int");

                    b.HasKey("SaladId", "IngridientId");

                    b.HasIndex("IngridientId");

                    b.ToTable("saladIngridients");

                    b.HasData(
                        new
                        {
                            SaladId = 1001,
                            IngridientId = 7
                        },
                        new
                        {
                            SaladId = 1001,
                            IngridientId = 8
                        },
                        new
                        {
                            SaladId = 1001,
                            IngridientId = 9
                        },
                        new
                        {
                            SaladId = 1002,
                            IngridientId = 10
                        },
                        new
                        {
                            SaladId = 1002,
                            IngridientId = 11
                        },
                        new
                        {
                            SaladId = 1002,
                            IngridientId = 12
                        });
                });

            modelBuilder.Entity("MyProject.Data.Entities.Sushi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("sushi");

                    b.HasData(
                        new
                        {
                            Id = 2001,
                            Name = "Dragon",
                            Price = 19m
                        },
                        new
                        {
                            Id = 2002,
                            Name = "Gold Dragon",
                            Price = 23m
                        });
                });

            modelBuilder.Entity("MyProject.Data.Entities.SushiIngridient", b =>
                {
                    b.Property<int>("SushiId")
                        .HasColumnType("int");

                    b.Property<int>("IngridientId")
                        .HasColumnType("int");

                    b.HasKey("SushiId", "IngridientId");

                    b.HasIndex("IngridientId");

                    b.ToTable("sushiIngridients");

                    b.HasData(
                        new
                        {
                            SushiId = 2001,
                            IngridientId = 13
                        },
                        new
                        {
                            SushiId = 2001,
                            IngridientId = 14
                        },
                        new
                        {
                            SushiId = 2001,
                            IngridientId = 15
                        },
                        new
                        {
                            SushiId = 2001,
                            IngridientId = 16
                        },
                        new
                        {
                            SushiId = 2002,
                            IngridientId = 17
                        },
                        new
                        {
                            SushiId = 2002,
                            IngridientId = 18
                        },
                        new
                        {
                            SushiId = 2002,
                            IngridientId = 19
                        },
                        new
                        {
                            SushiId = 2002,
                            IngridientId = 20
                        },
                        new
                        {
                            SushiId = 2002,
                            IngridientId = 21
                        });
                });

            modelBuilder.Entity("EstablishmentPizza", b =>
                {
                    b.HasOne("MyProject.Data.Entities.Establishment", null)
                        .WithMany()
                        .HasForeignKey("establishmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyProject.Data.Entities.Pizza", null)
                        .WithMany()
                        .HasForeignKey("pizzasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EstablishmentSalad", b =>
                {
                    b.HasOne("MyProject.Data.Entities.Establishment", null)
                        .WithMany()
                        .HasForeignKey("establishmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyProject.Data.Entities.Salad", null)
                        .WithMany()
                        .HasForeignKey("saladsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EstablishmentSushi", b =>
                {
                    b.HasOne("MyProject.Data.Entities.Establishment", null)
                        .WithMany()
                        .HasForeignKey("establishmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyProject.Data.Entities.Sushi", null)
                        .WithMany()
                        .HasForeignKey("sushisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IngridientPizza", b =>
                {
                    b.HasOne("MyProject.Data.Entities.Ingridient", null)
                        .WithMany()
                        .HasForeignKey("ingridientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyProject.Data.Entities.Pizza", null)
                        .WithMany()
                        .HasForeignKey("pizzasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IngridientSalad", b =>
                {
                    b.HasOne("MyProject.Data.Entities.Ingridient", null)
                        .WithMany()
                        .HasForeignKey("ingridientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyProject.Data.Entities.Salad", null)
                        .WithMany()
                        .HasForeignKey("saladsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IngridientSushi", b =>
                {
                    b.HasOne("MyProject.Data.Entities.Ingridient", null)
                        .WithMany()
                        .HasForeignKey("ingridientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyProject.Data.Entities.Sushi", null)
                        .WithMany()
                        .HasForeignKey("sushisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyProject.Data.Entities.PizzaIngridient", b =>
                {
                    b.HasOne("MyProject.Data.Entities.Ingridient", "Ingridient")
                        .WithMany()
                        .HasForeignKey("IngridientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyProject.Data.Entities.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingridient");

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("MyProject.Data.Entities.SaladIngridient", b =>
                {
                    b.HasOne("MyProject.Data.Entities.Ingridient", "Ingridient")
                        .WithMany()
                        .HasForeignKey("IngridientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyProject.Data.Entities.Salad", "Salad")
                        .WithMany()
                        .HasForeignKey("SaladId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingridient");

                    b.Navigation("Salad");
                });

            modelBuilder.Entity("MyProject.Data.Entities.SushiIngridient", b =>
                {
                    b.HasOne("MyProject.Data.Entities.Ingridient", "Ingridient")
                        .WithMany()
                        .HasForeignKey("IngridientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyProject.Data.Entities.Sushi", "Sushi")
                        .WithMany()
                        .HasForeignKey("SushiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingridient");

                    b.Navigation("Sushi");
                });
#pragma warning restore 612, 618
        }
    }
}
